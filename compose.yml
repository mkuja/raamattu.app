
services:

  raamattu-be:
    build: raamattu-be
    ports:
      - "3000:3000"
    environment:
      - RAAMATTU_PG=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    develop:
      watch:
        - action: rebuild
          path: "./raamattu-be"

  raamattu-fe:
    build: raamattu-fe
    ports: 
      - "8080:8080"
    volumes:
      - ./:/app/
    environment:
      - RAAMATTU_BACKEND_URL=${RAAMATTU_BACKEND_URL}
    depends_on:
      migration:
        condition: service_completed_successfully
    restart: always

  selenium-server:
    image: selenium/standalone-chrome:4.27.0-20241204
    volumes:
      - "/dev/shm:/dev/shm"
    ports:
      - "5900:5900"
      - "4444:4444"
      - "7900:7900"

  postgres:
    image: postgres:17.0
    restart: always
    volumes:
      - raamattuapp-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=${POSTGRES_PASSWORD} pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 60s
      retries: 15
      start_period: 3s

  migration:
    build:
      dockerfile: db/migrate.Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PG_HOST=postgres
    restart: no
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  raamattuapp-data:
